#!/usr/bin/env bash

printf "[ %s: Trim and decontaminate with bbduk2 ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# make outdir
outdir="$(dirname "${output_fq}")"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# pair the files
for fq_file in "${input_fq[@]}"; do
    bn="$(basename "${fq_file}" .fastq.gz)"
    if grep -q "_1" <<< "${bn}"; then
        fq_r1="${fq_file}"
    elif grep -q "_2" <<< "${bn}"; then
        fq_r2="${fq_file}"
    fi
done
printf "\tfq_r1: %s\n\tfq_r2: %s\n" "${fq_r1}" "${fq_r2}"

# bbduk parameters
 fref="bin/bbtools/resources/phix174_ill.ref.fa.gz,"
fref+="bin/bbtools/resources/sequencing_artifacts.fa.gz,"
fref+="bin/bbtools/resources/adapters_no_transposase.fa.gz"

rref="bin/bbtools/resources/adapters.fa"

# build command
java_ram=$((ram_limit/1000000000))"g"
cmd=( bin/bbtools/bbduk2.sh threads="${max_cpus}" "-Xmx${java_ram}"
        "in=${fq_r1}"
        "in2=${fq_r2}"
        "out=${output_fq}"
        ziplevel=9
        "fref=${fref}"
        "rref=${rref}"
        k=23 hdist=2 mink=10 hdist2=1
        trimpairsevenly
        trimbyoverlap
        forcetrimmod=5
        "stats=${outdir}/stats.txt"
        "bhist=${outdir}/bhist.txt"
        "qhist=${outdir}/qhist.txt"
        "qchist=${outdir}/qchist.txt"
        "aqhist=${outdir}/aqhist.txt"
        "bqhist=${outdir}/bqhist.txt" 
        "lhist=${outdir}/lhist.txt" 
        "gchist=${outdir}/gchist.txt" )

shopt -s extglob
printf "Final command line: "
printf "%s " "${cmd[@]//+([[:blank:]])/ }"
printf "\n"
shopt -u extglob

# run bbduk2
log_file="${outdir}/bbduk.log"
srun --ntasks=1 --cpus-per-task="${max_cpus}" --exclusive \
    --output="${log_file}" "${cmd[@]}" &

printf "[ %s: Waiting for bbduk2 to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/METADATA.csv"
printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    bbnorm revision,$(bin/bbtools/bbduk2.sh 2>&1 | sed '3q;d')
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
