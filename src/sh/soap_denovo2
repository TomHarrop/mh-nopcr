#!/usr/bin/env bash

printf "[ %s: Run assembly with SOAP-denovo ]\n" \
    "$(date)"

# shellcheck disable=SC1091
source "src/sh/bash_header"
# shellcheck disable=SC1091
source "src/sh/io_parser"

# soap location
soapdenovo=bin/soapdenovo2/SOAPdenovo-63mer

# make outdir
outdir="${output_fa[0]%%/run_*}"
printf "outdir:\t%s\n" "${outdir}"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

# separate PE and MP files
for fq_file in "${input_fq[@]}"; do
    bn="$(basename "${fq_file}" .fastq.gz)"
    if grep -q "lmp" <<< "${bn}"; then
        fq_mp="${fq_file}"
    elif grep -q "Mh" <<< "${bn}"; then
        fq_pe="${fq_file}"
    fi
done
printf "fq_pe:\t%s\nfq_mp:\t%s\n" "${fq_pe}" "${fq_mp}"

# parse kmer lengths
prefs=( ${output_fa[@]%%mer\/*} )
kmer_lengths=( ${prefs[@]##*\/run_} )
printf "using kmer:\t%s\n" "${kmer_lengths[@]}"

# deinterleave fq
script_name="$(basename "$0")"
tmp_outdir="$(mktemp --tmpdir -d "${script_name}_tmp.XXXXXXXX")"
printf "[ %s: Deinterleaving reads to %s ]\n" "$(date)" "${tmp_outdir}"

fq_mp_r1="${tmp_outdir}/mpr1.fq.gz"
fq_mp_r2="${tmp_outdir}/mpr2.fq.gz"

fq_pe_r1="${tmp_outdir}/per1.fq.gz"
fq_pe_r2="${tmp_outdir}/per2.fq.gz"

bin/bbtools/reformat.sh \
    "in=${fq_mp}" "out1=${fq_mp_r1}" "out2=${fq_mp_r2}" &
bin/bbtools/reformat.sh \
    "in=${fq_pe}" "out1=${fq_pe_r1}" "out2=${fq_pe_r2}" &

printf "[ %s: Waiting for reformat.sh to finish ]\n" "$(date)"
FAIL=0
fail_wait

# configure SOAP
sd2_config_file="${outdir}/soap_config"
cat <<- _EOF_ > "${sd2_config_file}"
# Illumina PCR-free
[LIB]
avg_ins=470
reverse_seq=0
asm_flags=1
rd_len_cutoff=101
q1=${fq_pe_r1}
q2=${fq_pe_r2}

# Nextera mate pairs
[LIB]
avg_ins=5500
reverse_seq=1
asm_flags=2
rd_len_cutoff=125
rank=1
pair_num_cutoff=5
q1=${fq_mp_r1}
q2=${fq_mp_r2}
_EOF_

# build SOAP commands
for soap_kmer_length in "${kmer_lengths[@]}"; do
    # set up directories
    soap_outdir="${outdir}/run_${soap_kmer_length}mer"
    if [[ ! -d "${soap_outdir}" ]]; then
        mkdir -p "${soap_outdir}"
    fi

    # build command
    cmd=( "${soapdenovo}" all 
              -s "${sd2_config_file}"
              -o "${soap_outdir}/assembly" 
              -K "${soap_kmer_length}"
              -m 63 -p 15 ) 

    printf "SOAP command line: "
    printf "%s " "${cmd[@]//+([[:blank:]])/ }"
    printf "\n"
    shopt -u extglob

    # run SOAP
    log_file="${outdir}/soap_${soap_kmer_length}.log"
    
    "${cmd[@]}" 2> "${log_file}" &
done

printf "[ %s: Waiting for SOAP to finish ]\n" "$(date)"
FAIL=0
fail_wait

# log metadata
metadata_file="${outdir}/METADATA.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    SOAP,$("${soapdenovo}" 2>&1 | sed '2q;d')
    reformat revision,$(bin/bbtools/reformat.sh 2>&1 | sed '3q;d')
_EOF_

printf "[ %s: Removing temporary files ]\n" "$(date)"
rm -r "${tmp_outdir}"

printf "[ %s: Done ]\n" "$(date)"

exit 0
